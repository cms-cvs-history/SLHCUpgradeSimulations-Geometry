process PROD  = 
{

    # The number of events to be processed.
    untracked PSet maxEvents = {untracked int32 input = 100}
    
    service =  RandomNumberGeneratorService {
	# This is to initialize the random engine of the source
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engines of Famos
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
            untracked uint32 famosPileUp = 918273
	    untracked uint32 famosSimHits = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	    untracked uint32 caloRecHits = 654321
	    untracked uint32 paramMuons = 54525

            untracked uint32 RecHits = 1259
            untracked uint32 siPixelDigis = 135711
            untracked uint32 siStripDigis = 13171923
            untracked uint32 g4SimHits = 13579
            untracked uint32 mix = 293137
	}
    }

    // If you want to use the (CMS default) CLHEP random,
    // set these ones to false
    replace famosPileUp.UseTRandomEngine = true
    replace famosSimHits.UseTRandomEngine = true
    replace siTrackerGaussianSmearingRecHits.UseTRandomEngine = true
    replace caloRecHits.UseTRandomEngine = true
    replace paramMuons.UseTRandomEngine = true
    
    #/-------
    # Event generation: uncomment the include line you want
    # Generate H -> ZZ -> l+l- l'+l'- (l,l'=e or mu), with mH=180GeV/c2
    include "FastSimulation/Configuration/data/HZZllll.cfi"
    # Generate ttbar events
    #  include "FastSimulation/Configuration/data/ttbar.cfi"
    # Generate Minimum Bias Events
    #  include "FastSimulation/Configuration/data/MinBiasEvents.cfi"
    # Generate muons with a flat pT particle gun, and with pT=10.
    # include "FastSimulation/Configuration/data/FlatPtMuonGun.cfi"
    # replace FlatRandomPtGunSource.PGunParameters.PartID={130}
    #--------/

    # Famos sequences
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    // If you want to turn on/off pile-up or set average num of pileup
    replace famosPileUp.PileUpSimulator.averageNumber = 5.0
    // Parametrized magnetic field
    replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
    // You may not want to simulate everything for your study
    replace famosSimHits.SimulateCalorimetry = true
    replace famosSimHits.SimulateTracking = true
    # replace famosSimHits.SimulateMuons = false

    # Switching on timing statistics
    service = Timing { }

    #/----------
    # Digis: uncomment this block to make digis
    include "CalibTracker/Configuration/data/SiStrip_FakeGain.cff"
    include "CalibTracker/Configuration/data/SiStrip_FakeNoise.cff"
    include "CalibTracker/Configuration/data/SiStrip_FakePedestals.cff"
    include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"
    include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
    replace siPixelDigis.ROUList = { "TrackerHits" }
    # uncomment next line to switch off random pixel noise
    #replace siPixelDigis.AddNoisyPixels = false
    include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
    replace siStripDigis.ROUList = { "TrackerHits" }
    # uncomment next line to switch off strip noise
    #replace siStripDigis.Noise = false
    #----------/

    #/-----------
    # Full Reco: uncomment for full track pattern recognition
    # ---requires Digis
    include "RecoLocalTracker/Configuration/data/RecoLocalTracker.cff"
    include "RecoTracker/Configuration/data/RecoTracker.cff"
    #-----------/

    #/-----------
    # Efficiency plots: uncomment to do matching and produce efficiency plots
    # warning this is slow when including pileup and is non-linear
    # ---requires Digis and full reco
    include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi"
    replace trackingParticles.simHitLabel = "famosSimHits"
    replace trackingParticles.TrackerHitLabels = { "TrackerHits" }
    include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
    include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"
    replace TrackAssociatorByHitsESProducer.ROUList = { "TrackerHits" }
    include "Validation/RecoTrack/data/MultiTrackValidator.cff"
    replace multiTrackValidator.sim = "famosSimHits"
    replace multiTrackValidator.label = {ctfWithMaterialTracks,rsWithMaterialTracks}
    replace multiTrackValidator.label_tp_fake = trackingParticles
    # version of "Validation/RecoTrack/data/cutsTPEffic.cfi" in 169 is wrong
    # it is missing signalOnly, include module definition explicitly
    module cutsTPEffic = TrackingParticleSelector
    {
        InputTag src = trackingParticles
        double ptMin = 10.0
        double minRapidity =-2.4
        double maxRapidity = 2.4
        double tip = 3.5
        double lip = 30
        int32  minHit = 0
        bool signalOnly = true
        vint32 pdgId = {}
    }
    #----------/

    path p1 = { 
        # just hits
	#famosWithTrackerHits
        #----------------------
        # hits and Digis
	#famosWithTrackerHits,
        #siPixelDigis,
        #siStripDigis
        #----------------------
        # hits, Digis, and track pattern recognition
	#famosWithTrackerHits,
        #siPixelDigis,
        #siStripDigis,
        #trackerlocalreco,
        #ckftracks,
        #rstracks
        #----------------------
        # hits, Digis, pattern recognition, and Efficiency Plots
	famosWithTrackerHits,
        siPixelDigis,
        siStripDigis,
        trackerlocalreco,
        ckftracks,
        rstracks,
        trackingParticles,
        cutsTPEffic,
        multiTrackValidator
    }

    module o1 = PoolOutputModule { 
	untracked string fileName = "/uscms_data/d1/cheung/slhc/timingtest.root" 
	 untracked vstring outputCommands = {
	"keep *",
	"drop *_mix_*_*"
	}
    }
    endpath outpath = { o1 }
    
    # Keep the logging output to a nice level #
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    
}		
